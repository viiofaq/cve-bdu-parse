import os
from datetime import datetime
import openpyxl
import psycopg2
import requests
import urllib3
from fake_useragent import UserAgent
from openpyxl.utils import get_column_letter

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

now = datetime.now()
curdatebdu = now.strftime("%m.%Y")

###################


with open("settings.txt", 'r') as fp:
    txt_lines = [1, 4, 7, 10, 13]
    lines = []
    for i, line in enumerate(fp):
        if i in txt_lines:
            lines.append(line.strip())

dbname = lines[0]
user = lines[1]
password = lines[2]
host = lines[3]

conn = psycopg2.connect(dbname=dbname, user=user,
                        password=password, host=host)

cursor = conn.cursor()
###################

product_list = []
with open("softwarelist.txt", 'r') as fs:
    for i, line in enumerate(fs):
        product_list.append(line.strip())

product_list_size = len(product_list)

####################

try:
    os.remove("vullist.xlsx")
except OSError:
    pass

user_agent = UserAgent()
headers = {'accept': 'application/json, text/plain, */*',
           'user-Agent': user_agent.google}

download = requests.get('https://bdu.fstec.ru/files/documents/vullist.xlsx', headers=headers, verify=False)
open("vullist.xlsx", "wb").write(download.content)

wb = openpyxl.load_workbook("vullist.xlsx")  # oткрываем файл vullist.xlsx
sheets_list = wb.sheetnames  # Получаем список всех листов в файле
sheet_active = wb[sheets_list[0]]  # Выбираем первый лист

row_max = sheet_active.max_row  # Получаем количество строк в vullist.xlsx
column_max = sheet_active.max_column  # Получаем количество столбцов
row_min = 4  # Переменная, отвечающая за номер строки
column_min = 1  # Переменная, отвечающая за номер столбца
string_counter = 0

while row_min <= row_max:

    row_min = str(row_min)  # переводим номер строки в тип str для получения значения ячейки
    number_column = get_column_letter(10)  # получаем обозначение столбца буквой с датой уязвимости
    number_cell = number_column + row_min  # получаем обозначение ячейки с датой уязвимости

    data_from_cell = sheet_active[number_cell].value  # получаем значение ячейки
    data_from_cell = str(data_from_cell)
    str(curdatebdu)

    if curdatebdu in data_from_cell:

        soft_cell = "E" + row_min
        soft = sheet_active[soft_cell].value
        soft = str(soft)

        bdu_cell = "A" + row_min
        bdu_id = sheet_active[bdu_cell].value
        bdu_id = str(bdu_id)

        idbdu = bdu_id[4:]
        bdu_link = 'https://bdu.fstec.ru/vul/' + idbdu

        softver_cell = "F" + row_min
        softver = sheet_active[softver_cell].value
        softver = str(softver)

        cwe_cell = "W" + row_min
        cwetype = sheet_active[cwe_cell].value
        cwetype = str(cwetype)

        cvsslvl_cell = "M" + row_min
        cvsslvl = sheet_active[cvsslvl_cell].value
        cvsslvl = str(cvsslvl)

        date_cell = "J" + row_min
        dateres = sheet_active[date_cell].value
        dateres = str(dateres)

        otherid_cell = "S" + row_min
        otherid = sheet_active[otherid_cell].value
        otherid = str(otherid)

        descbdu_cell = "C" + row_min
        descbdu = sheet_active[descbdu_cell].value
        descbdu = str(descbdu)

        extralinks_cell = "R" + row_min
        extralinks = sheet_active[extralinks_cell].value
        extralinks = str(extralinks)
        extralinks = extralinks + '\n' + bdu_link

        if not product_list:
            cursor.execute(
                "INSERT INTO bdulist(bduid,datepublished,cvss,software,softwareversion,description,cwe,links,"
                "otherids) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)", (bdu_id, dateres, cvsslvl, soft, softver,
                                                                 descbdu, cwetype, extralinks, otherid))

            pass
        else:
            for i in range(product_list_size):
                if product_list[i] in soft:
                    cursor.execute(
                        "INSERT INTO bdulist(bduid,datepublished,cvss,software,softwareversion,description,cwe,links,"
                        "otherids) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)", (bdu_id, dateres, cvsslvl, soft, softver,
                                                                         descbdu, cwetype, extralinks, otherid))


    row_min = int(row_min)
    row_min = row_min + 1

#print("FSTEC DONE")

conn.commit()
cursor.close()
conn.close()
